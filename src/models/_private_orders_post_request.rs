/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrivateOrdersPostRequest {
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "type")]
    pub r#type: TypeEnum,
    #[serde(rename = "side")]
    pub side: SideEnum,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<String>,
    #[serde(rename = "cost", skip_serializing_if = "Option::is_none")]
    pub cost: Option<String>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "client_order_id", skip_serializing_if = "Option::is_none")]
    pub client_order_id: Option<String>,
}

impl PrivateOrdersPostRequest {
    pub fn new(symbol: String, r#type: TypeEnum, side: SideEnum) -> PrivateOrdersPostRequest {
        PrivateOrdersPostRequest {
            symbol,
            r#type,
            side,
            quantity: None,
            cost: None,
            price: None,
            client_order_id: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeEnum {
    #[serde(rename = "market")]
    Market,
    #[serde(rename = "limit")]
    Limit,
}

impl Default for TypeEnum {
    fn default() -> TypeEnum {
        Self::Market
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SideEnum {
    #[serde(rename = "buy")]
    Buy,
    #[serde(rename = "sell")]
    Sell,
}

impl Default for SideEnum {
    fn default() -> SideEnum {
        Self::Buy
    }
}

