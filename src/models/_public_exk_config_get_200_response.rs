/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicExkConfigGet200Response {
    #[serde(rename = "circulating_supply")]
    pub circulating_supply: f64,
    #[serde(rename = "last_reserve_value_usd")]
    pub last_reserve_value_usd: f64,
    #[serde(rename = "mint_rate")]
    pub mint_rate: f64,
    #[serde(rename = "lp_share_percent_to_exk")]
    pub lp_share_percent_to_exk: f64,
    #[serde(rename = "routes")]
    pub routes: std::collections::HashMap<String, models::PublicExkConfigGet200ResponseRoutesValue>,
    #[serde(rename = "user_levels")]
    pub user_levels: Vec<models::PublicExkConfigGet200ResponseUserLevelsInner>,
    #[serde(rename = "weekly_dist")]
    pub weekly_dist: Box<models::PublicExkConfigGet200ResponseWeeklyDist>,
}

impl PublicExkConfigGet200Response {
    pub fn new(circulating_supply: f64, last_reserve_value_usd: f64, mint_rate: f64, lp_share_percent_to_exk: f64, routes: std::collections::HashMap<String, models::PublicExkConfigGet200ResponseRoutesValue>, user_levels: Vec<models::PublicExkConfigGet200ResponseUserLevelsInner>, weekly_dist: models::PublicExkConfigGet200ResponseWeeklyDist) -> PublicExkConfigGet200Response {
        PublicExkConfigGet200Response {
            circulating_supply,
            last_reserve_value_usd,
            mint_rate,
            lp_share_percent_to_exk,
            routes,
            user_levels,
            weekly_dist: Box::new(weekly_dist),
        }
    }
}

