/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrivatePoolTasksGet200ResponseInner {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "pool_id")]
    pub pool_id: String,
    #[serde(rename = "type")]
    pub r#type: TypeEnum,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "created_at")]
    pub created_at: f64,
    #[serde(rename = "updated_at")]
    pub updated_at: f64,
    #[serde(rename = "spent")]
    pub spent: Vec<models::PrivatePoolTasksGet200ResponseInnerSpentInner>,
    #[serde(rename = "got")]
    pub got: Vec<models::PrivatePoolTasksGet200ResponseInnerSpentInner>,
}

impl PrivatePoolTasksGet200ResponseInner {
    pub fn new(id: String, pool_id: String, r#type: TypeEnum, status: String, created_at: f64, updated_at: f64, spent: Vec<models::PrivatePoolTasksGet200ResponseInnerSpentInner>, got: Vec<models::PrivatePoolTasksGet200ResponseInnerSpentInner>) -> PrivatePoolTasksGet200ResponseInner {
        PrivatePoolTasksGet200ResponseInner {
            id,
            pool_id,
            r#type,
            status,
            created_at,
            updated_at,
            spent,
            got,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeEnum {
    #[serde(rename = "join")]
    Join,
    #[serde(rename = "leave")]
    Leave,
}

impl Default for TypeEnum {
    fn default() -> TypeEnum {
        Self::Join
    }
}

