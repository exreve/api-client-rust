/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicCurrenciesGet200ResponseInner {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "precision")]
    pub precision: f64,
    #[serde(rename = "deposit_enabled", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub deposit_enabled: Option<Option<serde_json::Value>>,
    #[serde(rename = "withdrawal_enabled", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub withdrawal_enabled: Option<Option<serde_json::Value>>,
    #[serde(rename = "value_usd")]
    pub value_usd: String,
    #[serde(rename = "logo_url")]
    pub logo_url: String,
    #[serde(rename = "networks")]
    pub networks: Vec<models::PublicCurrenciesGet200ResponseInnerNetworksInner>,
    #[serde(rename = "lp_token_of", skip_serializing_if = "Option::is_none")]
    pub lp_token_of: Option<String>,
}

impl PublicCurrenciesGet200ResponseInner {
    pub fn new(id: String, name: String, precision: f64, value_usd: String, logo_url: String, networks: Vec<models::PublicCurrenciesGet200ResponseInnerNetworksInner>) -> PublicCurrenciesGet200ResponseInner {
        PublicCurrenciesGet200ResponseInner {
            id,
            name,
            precision,
            deposit_enabled: None,
            withdrawal_enabled: None,
            value_usd,
            logo_url,
            networks,
            lp_token_of: None,
        }
    }
}

