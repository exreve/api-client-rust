/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicFundsTransparencyGet200Response {
    #[serde(rename = "timestamp")]
    pub timestamp: f64,
    #[serde(rename = "funds")]
    pub funds: std::collections::HashMap<String, std::collections::HashMap<String, models::PublicFundsTransparencyGet200ResponseFundsValueValue>>,
    #[serde(rename = "stats")]
    pub stats: std::collections::HashMap<String, models::PublicFundsTransparencyGet200ResponseStatsValue>,
    #[serde(rename = "addresses_labels")]
    pub addresses_labels: std::collections::HashMap<String, String>,
}

impl PublicFundsTransparencyGet200Response {
    pub fn new(timestamp: f64, funds: std::collections::HashMap<String, std::collections::HashMap<String, models::PublicFundsTransparencyGet200ResponseFundsValueValue>>, stats: std::collections::HashMap<String, models::PublicFundsTransparencyGet200ResponseStatsValue>, addresses_labels: std::collections::HashMap<String, String>) -> PublicFundsTransparencyGet200Response {
        PublicFundsTransparencyGet200Response {
            timestamp,
            funds,
            stats,
            addresses_labels,
        }
    }
}

