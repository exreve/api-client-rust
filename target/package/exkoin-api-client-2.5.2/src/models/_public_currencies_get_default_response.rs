/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicCurrenciesGetDefaultResponse {
    #[serde(rename = "success")]
    pub success: bool,
    #[serde(rename = "code")]
    pub code: String,
    #[serde(rename = "error")]
    pub error: String,
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<String>,
    #[serde(rename = "params", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub params: Option<Option<serde_json::Value>>,
}

impl PublicCurrenciesGetDefaultResponse {
    pub fn new(success: bool, code: String, error: String) -> PublicCurrenciesGetDefaultResponse {
        PublicCurrenciesGetDefaultResponse {
            success,
            code,
            error,
            details: None,
            params: None,
        }
    }
}

