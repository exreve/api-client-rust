/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicMarketsGet200ResponseInner {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "base")]
    pub base: String,
    #[serde(rename = "quote")]
    pub quote: String,
    #[serde(rename = "active", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub active: Option<Option<serde_json::Value>>,
    #[serde(rename = "precision")]
    pub precision: Box<models::PublicMarketsGet200ResponseInnerPrecision>,
    #[serde(rename = "limits")]
    pub limits: Box<models::PublicMarketsGet200ResponseInnerLimits>,
}

impl PublicMarketsGet200ResponseInner {
    pub fn new(id: String, base: String, quote: String, precision: models::PublicMarketsGet200ResponseInnerPrecision, limits: models::PublicMarketsGet200ResponseInnerLimits) -> PublicMarketsGet200ResponseInner {
        PublicMarketsGet200ResponseInner {
            id,
            base,
            quote,
            active: None,
            precision: Box::new(precision),
            limits: Box::new(limits),
        }
    }
}

