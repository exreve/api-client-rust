/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicPoolsGet200ResponseInner {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "active", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub active: Option<Option<serde_json::Value>>,
    #[serde(rename = "base_currency")]
    pub base_currency: String,
    #[serde(rename = "quote_currency")]
    pub quote_currency: String,
    #[serde(rename = "base_reserve")]
    pub base_reserve: String,
    #[serde(rename = "quote_reserve")]
    pub quote_reserve: String,
    #[serde(rename = "token_id")]
    pub token_id: String,
    #[serde(rename = "token_supply")]
    pub token_supply: String,
    #[serde(rename = "earned_24h")]
    pub earned_24h: Box<models::PublicPoolsGet200ResponseInnerEarned24h>,
    #[serde(rename = "APY_estimated_on_fees_24h")]
    pub apy_estimated_on_fees_24h: String,
}

impl PublicPoolsGet200ResponseInner {
    pub fn new(id: String, base_currency: String, quote_currency: String, base_reserve: String, quote_reserve: String, token_id: String, token_supply: String, earned_24h: models::PublicPoolsGet200ResponseInnerEarned24h, apy_estimated_on_fees_24h: String) -> PublicPoolsGet200ResponseInner {
        PublicPoolsGet200ResponseInner {
            id,
            active: None,
            base_currency,
            quote_currency,
            base_reserve,
            quote_reserve,
            token_id,
            token_supply,
            earned_24h: Box::new(earned_24h),
            apy_estimated_on_fees_24h,
        }
    }
}

