/*
 * ExKoin API Documentation
 *
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrivateDepositAddressGet200Response {
    #[serde(rename = "active", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub active: Option<Option<serde_json::Value>>,
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "memo", skip_serializing_if = "Option::is_none")]
    pub memo: Option<String>,
    #[serde(rename = "min_deposit_amount")]
    pub min_deposit_amount: String,
    #[serde(rename = "currencyDetails")]
    pub currency_details: Box<models::PublicCurrenciesGet200ResponseInner>,
    #[serde(rename = "networkDetails")]
    pub network_details: Box<models::PublicNetworksGet200ResponseInner>,
}

impl PrivateDepositAddressGet200Response {
    pub fn new(address: String, min_deposit_amount: String, currency_details: models::PublicCurrenciesGet200ResponseInner, network_details: models::PublicNetworksGet200ResponseInner) -> PrivateDepositAddressGet200Response {
        PrivateDepositAddressGet200Response {
            active: None,
            address,
            memo: None,
            min_deposit_amount,
            currency_details: Box::new(currency_details),
            network_details: Box::new(network_details),
        }
    }
}

